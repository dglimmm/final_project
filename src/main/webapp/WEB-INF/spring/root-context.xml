<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 
		*root-context.xml
		서버구동과 동시에 web.xml 을 거쳐서 바로 로딩되는 문서 
		=> 서버구동과 동시에 바로 셋팅(bean으로 등록)해야되는 내용들을 작성하면 됨
		주로 DB연결설정, 트랜잭션처리, 내외부 모듈연동 등등 
	 -->
	 
	 <!-- 커넥션풀 쓸수있는 클래스  -->
	 <bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource" destroy-method="close">
	 		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
	        <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" /> 
	        <property name="username" value="FINALL"/>
	        <property name="password" value="FINALL"/>
	 </bean>
	
	<!-- 
		BasicDataSource dataSource = new BasicDataSource();
		dataSource.setDriverClassName("oracle.jdbc.driver.OracleDriver");
		dataSource.setUrl("jdbc:oracle:thin:@localhost:1521:xe");
		dataSource.setUsername("spring");
		dataSource.setPassword("spring");
		이것들을 스프링이 대신해줌
	 -->	
	 
	 <!-- sqlSessionFactory를 대체하는 객체 -->
	 <!-- dataSource객체를 주입해준다 -->
	 <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
	 	<property name="configLocation" value="classpath:mybatis-config.xml"/>
	 	<property name="dataSource" ref="dataSource"/>
	 </bean>
	
	<!-- 
		SqlSessionFactoryBean sqlSessionFactory = new SqlSessionFactoryBean();
		sqlSessionFactory.setConfigLocation("classpath:mybatis-config.xml");
		sqlSessionFactory.setDataSource("dataSource");
		이걸 스프링이 대신해준다 
	 -->
	 
	 <bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
		<constructor-arg ref="sqlSessionFactory"/>	 
	 </bean>
		
	<!-- 
		SqlSessionTemplate sqlSession = new SqlSessionTemplate(sqlSessionFactory);
		=> sqlSessionFactory를 생성자에 주입해줘
	 -->
	 
	 <!-- 
	 	property : setter 주입
	 	constructor-arg : 생성자 주입
	  -->
	 <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
	      <property name="maxUploadSize" value="100000000" />
	      <property name="maxInMemorySize" value="100000000" />
   	</bean>
   	
   	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="sender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com"/>
		<property name="port" value="587"/>
		<property name="username" value="bronzegun614@gmail.com"/>
		<property name="password" value="hskg jink qiom ddny"/>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>
   	
</beans>
