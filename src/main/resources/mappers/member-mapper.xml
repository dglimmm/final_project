<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

	<resultMap type="Member" id="memberResult">
		<result column="MEMBER_NO" property="memberNo"/>
		<result column="MEMBER_ID" property="memberId"/>
		<result column="MEMBER_PWD" property="memberPwd"/>
		<result column="MEMBER_NAME" property="memberName"/>
		<result column="MEMBER_NICKNAME" property="memberNickName"/>
		<result column="MEMBER_EMAIL" property="memberEmail"/>
		<result column="MEMBER_PHONE" property="memberPhone"/>
		<result column="MEMBER_PROFILE_IMG" property="memberProfileImg"/>
		<result column="MEMBER_CREATE_DATE" property="createDate"/>
		<result column="MEMBER_MODIFY_DATE" property="modifyDate"/>
		<result column="MEMBER_RIGHT" property="memberRight"/>
		<result column="MEMBER_STATUS" property="memberStatus"/>
		<result column="MEMBER_GRADE" property="memberGrade"/>
	</resultMap>
	
	<resultMap type="MsgVo" id="MsgVoResult">
		<result column="CHAT_MESSAGE" property="message"/>
		<result column="CHAT_TIME" property="time"/>
		<result column="MY_NO" property="myNo"/>
		<result column="YOU_NO" property="youNo"/>
		<result column="MEMBER_PROFILE_IMG" property="memberProfileImg"/>
		<result column="MEMBER_NICKNAME" property="memberNickName"/>
	</resultMap>

	<!-- 로그인 쿼리문 -->
	<select id="loginMember" resultMap="memberResult">
		SELECT   MEMBER_NO
	            ,MEMBER_ID
	            ,MEMBER_PWD
	            ,MEMBER_NAME
	            ,MEMBER_NICKNAME
	            ,MEMBER_EMAIL
	            ,MEMBER_PHONE
	            ,MEMBER_PROFILE_IMG
	            ,MEMBER_CREATE_DATE
	            ,MEMBER_MODIFY_DATE
	            ,MEMBER_RIGHT
	            ,MEMBER_STATUS
	            ,MEMBER_GRADE
		FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
		and MEMBER_STATUS = 'Y'
	</select>
	
	<!-- 박수현 회원 전체 -->
	<select id="memberInfor" resultMap="memberResult">
		SELECT   MEMBER_NO
	            ,MEMBER_ID
	            ,MEMBER_PWD
	            ,MEMBER_NAME
	            ,MEMBER_NICKNAME
	            ,MEMBER_EMAIL
	            ,MEMBER_PHONE
	            ,MEMBER_PROFILE_IMG
	            ,MEMBER_CREATE_DATE
	            ,MEMBER_MODIFY_DATE
	            ,MEMBER_RIGHT
	            ,MEMBER_STATUS
	            ,MEMBER_GRADE
		FROM MEMBER
	</select>

	



































































































































































































































































<!-- 프로필이미지 등록 -->

	<update id="updateProfileImg">
      UPDATE MEMBER
         SET 
            MEMBER_PROFILE_IMG = #{memberProfileImg}
      WHERE MEMBER_NO = #{memberNo}
   </update>
   

   	<select id="UpdateImgMember" resultMap="memberResult">
		SELECT MEMBER_NO
            ,MEMBER_ID
            ,MEMBER_PWD
            ,MEMBER_NAME
            ,MEMBER_NICKNAME
            ,MEMBER_EMAIL
            ,MEMBER_PHONE
            ,MEMBER_PROFILE_IMG
            ,MEMBER_CREATE_DATE
            ,MEMBER_MODIFY_DATE
            ,MEMBER_RIGHT
            ,MEMBER_STATUS
            ,MEMBER_GRADE
		FROM MEMBER
		WHERE MEMBER_NO = #{memberNo}
		and MEMBER_STATUS = 'Y'
	</select>
	
	
<!-- 회원탈퇴 -->	
	<update id="deleteMember">
		UPDATE MEMBER
		    SET MEMBER_STATUS = 'N'
		WHERE MEMBER_ID = #{memberId}
	</update>

   

  
  
  
  <!-- 아이디찾기 -->
 	<select id="phoneIdCheck" resultMap="memberResult">
		SELECT   MEMBER_NO
	            ,MEMBER_ID
	            ,MEMBER_PWD
	            ,MEMBER_NAME
	            ,MEMBER_NICKNAME
	            ,MEMBER_EMAIL
	            ,MEMBER_PHONE
	            ,MEMBER_PROFILE_IMG
	            ,MEMBER_CREATE_DATE
	            ,MEMBER_MODIFY_DATE
	            ,MEMBER_RIGHT
	            ,MEMBER_STATUS
	            ,MEMBER_GRADE
		FROM MEMBER
		WHERE MEMBER_PHONE = #{memberPhone}
		and MEMBER_STATUS = 'Y'
  </select>
  
  
    <!-- 마이페이지 친구목록 -->
	<select id="friendList" resultMap="memberResult">
		
		SELECT FRIEND_MEMBER_NO as MEMBER_NO
	        ,MEMBER_NICKNAME
	        ,MEMBER_PROFILE_IMG
		FROM(
		    SELECT FRIEND_MEMBER_NO
		    FROM FRIEND 
		    JOIN MEMBER  using (MEMBER_NO)
		    WHERE MEMBER_NO = #{memberNo}
                and friend_status = 'Y')
		JOIN MEMBER ON (FRIEND_MEMBER_NO = MEMBER_NO)
	

	</select>
	
	<!-- 마이페이지 친구요청목록 -->
	<select id="friendRequest" resultMap="memberResult">
		SELECT FROM_MEMBER_NO as MEMBER_NO
	        ,MEMBER_NICKNAME
	        ,MEMBER_PROFILE_IMG
		FROM(
		    SELECT FROM_MEMBER_NO
		    FROM FRIEND_LOG
		    JOIN MEMBER  ON (MEMBER_NO = TO_MEMBER_NO)
		    WHERE MEMBER_NO = #{memberNo}
		    	AND FRIEND_STATUS = 1)
		JOIN MEMBER ON (FROM_MEMBER_NO = MEMBER_NO)
		WHERE MEMBER_STATUS = 'Y'
	</select>
  
  <!-- 친구삭제 -->
  	<update id="friendDelete">
    UPDATE FRIEND
        SET FRIEND_STATUS = 'N'
    WHERE FRIEND_MEMBER_NO = #{memberNo}
   </update>
  
  
     <!-- 마이페이지 삭제 후 친구목록 -->
	<select id="refriendDelete" resultMap="memberResult">
		
		SELECT FRIEND_MEMBER_NO as MEMBER_NO
	        ,MEMBER_NICKNAME
	        ,MEMBER_PROFILE_IMG
		FROM(
		    SELECT FRIEND_MEMBER_NO
		    FROM FRIEND 
		    JOIN MEMBER  using (MEMBER_NO)
		    WHERE MEMBER_NO = #{mno}
                and friend_status = 'Y')
		JOIN MEMBER ON (FRIEND_MEMBER_NO = MEMBER_NO)
	

	</select> 
	

	<!--  프로필 수정 쿼리문 -->
	<update id="updateMember">
      UPDATE MEMBER
         SET 
            MEMBER_NICKNAME = #{memberNickName},
            MEMBER_EMAIL = #{memberEmail},
            MEMBER_PHONE = #{memberPhone}
      WHERE MEMBER_ID = #{memberId}
   </update>
   
   	<!-- 프로필 수정 후 member정보 다시 가져오는 쿼리문 -->
	<select id="reloginMember" resultMap="memberResult">
		SELECT   MEMBER_NO
	            ,MEMBER_ID
	            ,MEMBER_PWD
	            ,MEMBER_NAME
	            ,MEMBER_NICKNAME
	            ,MEMBER_EMAIL
	            ,MEMBER_PHONE
	            ,MEMBER_PROFILE_IMG
	            ,MEMBER_CREATE_DATE
	            ,MEMBER_MODIFY_DATE
	            ,MEMBER_RIGHT
	            ,MEMBER_STATUS
	            ,MEMBER_GRADE
		FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
		and MEMBER_STATUS = 'Y'
	</select>
  
  <!-- 친구 거절버튼 눌렀을 때 -->
  	<update id="rejectFriend" parameterType="java.util.Map">
      UPDATE FRIEND_LOG
         SET 
            FRIEND_STATUS = 3
      WHERE TO_MEMBER_NO = #{memberNo}
      	AND FROM_MEMBER_NO = #{friendNo}
   </update>
   
   	<!--채팅  insert  -->
   	<insert id="insertChat" >
		INSERT INTO CHAT(
			my_No,
			you_No,
			chat_message,
			chat_time
		)
		VALUES(	
			#{myNo},
			#{youNo},
			#{message},
			#{time}
				
		)
		
		
	</insert>
  
  

     	<!-- 채팅페이지 상대방 쪽 -->
	<select id="leftChatList" resultMap="MsgVoResult">
		SELECT 	my_No,
			you_No,
			chat_message,
			chat_time,
          	m.MEMBER_PROFILE_IMG,
            m.member_nickname
          FROM CHAT c
          JOIN MEMBER m ON (MEMBER_NO = my_No)
          WHERE (c.my_No = #{myNo} AND c.you_No = #{youNo}) OR (c.my_No = #{youNo} AND c.you_No = #{myNo})
          ORDER BY chat_time
	</select>
	
	<!-- 채팅방 목록 -->
	<select id="chatList" resultMap="MsgVoResult">

SELECT
    CASE
        WHEN c.MY_NO = ${myNo} THEN c.YOU_NO
        ELSE c.MY_NO
    END AS you_No,
    m.MEMBER_NICKNAME AS MEMBER_NICKNAME,
    m.MEMBER_PROFILE_IMG AS MEMBER_PROFILE_IMG,
    MAX(c.CHAT_TIME) AS CHAT_TIME,
    MAX(c.CHAT_MESSAGE) KEEP (DENSE_RANK LAST ORDER BY c.CHAT_TIME) AS CHAT_MESSAGE
FROM CHAT c
JOIN MEMBER m ON 
    (c.MY_NO = m.MEMBER_NO AND c.YOU_NO = ${youNo}) OR 
    (c.YOU_NO = m.MEMBER_NO AND c.MY_NO = ${myNo})
WHERE c.MY_NO = ${myNo} OR c.YOU_NO = ${youNo}
GROUP BY
    CASE
        WHEN c.MY_NO = ${myNo} THEN c.YOU_NO
        ELSE c.MY_NO
    END,
    m.MEMBER_NICKNAME,
    m.MEMBER_PROFILE_IMG
ORDER BY CHAT_TIME DESC

	</select>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
   
   
   	<!-- 회원가입을 위한 쿼리문 -->
	<insert id="insertMember">
		INSERT INTO MEMBER(
			MEMBER_NO,
			MEMBER_ID,
			MEMBER_PWD,
			MEMBER_NAME,
			MEMBER_NICKNAME,
			MEMBER_EMAIL,
			MEMBER_PHONE
		
			
		)
		VALUES(
			SEQ_MNO.NEXTVAL,	
			#{memberId},
			#{memberPwd},
			#{memberName},
			#{memberNickName},
			
			replace(#{memberEmail}, ',', '@'),	
			
			#{memberPhone}
			
		)
		
		
	</insert>
	
   
   
   
   	<!-- 아이디 중복체크 -->
	<select id="idCheck" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
	</select>
	
	<!-- 닉네임 중복체크 -->
	<select id="nickNameCheck" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_NICKNAME = #{memberNickName}
	</select>
	

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
   	<!-- 아이디 이메일 중복체크 -->
	<select id="idEmailCheck" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
		AND MEMBER_EMAIL = #{memberEmail}
	</select>
	
	<!-- 임시비번 업데이트  -->
	<update id="setTemPwd">
      UPDATE MEMBER
         SET 
            MEMBER_PWD = #{memberPwd},
            MEMBER_MODIFY_DATE = SYSDATE
      WHERE MEMBER_EMAIL = #{memberEmail}
   </update>
	

</mapper>

   
