<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-config.dtd">
  
  <configuration>
  
  	<!-- settings : mybatis구동시 선언할 설정들을 작성하는 영역 -->
  	<settings>
  		<!-- 만약 null로 데이터가 전달되었다면 빈칸이 아닌 null로 인식해라(무조건대문자NULL) -->
  		<setting name="jdbcTypeForNull" value="NULL"/>
  	</settings>
  	
  	<!-- typeAlias : VO/DTO 클래스들의 풀클래스명을 단순한 클래스명으로 사용하기위한 별칭을 등록할 수 있는 영역 -->
  	<typeAliases>
  		<typeAlias type="com.kh.fin.member.model.vo.Member" alias="Member"/>
  		<typeAlias type="com.kh.fin.board.model.vo.Board" alias="Board"/>
  		<typeAlias type="com.kh.fin.board.model.vo.Reply" alias="Reply"/>
  		<typeAlias type="com.kh.fin.board.model.vo.Region" alias="Region"/>
  		<typeAlias type="com.kh.fin.board.model.vo.Good" alias="Good"/>
  		<typeAlias type="com.kh.fin.board.model.vo.Plan" alias="Plan"/>
  		<typeAlias type="com.kh.chat.MsgVo" alias="MsgVo"/>
  		<typeAlias type="com.kh.fin.board.model.vo.Category" alias="Category"/>
  		<typeAlias type="com.kh.fin.board.model.vo.Recommend" alias="Recommend"/>
  	</typeAliases>
  	<!-- 유의사항 : 미리 등록해두려면 해당 클래스가 진짜 존재하고 있는 상태여야한다. (껍데기라도 만들어놔야한다) -->
  	
  	<!-- environment, dataSource에 기술했던 db연결정보관련 root-context.xml에 작성할 예정 
  		왜? db등록은 서버연동과 동시에 같이 이루어져야되기 때문에 서버스타트와 동시에 바로 읽혀지는
  		root-context.xml문서에 기술할 예정
  	-->
  	
  	<!-- *mapper : 실행할 sql문들을 기록해둔 mapper 파일들을 등록하는 영역 -->
  	<mappers>
  		<mapper resource="/mappers/member-mapper.xml" />	
  		<mapper resource="/mappers/board-mapper.xml" />
  	</mappers>
  	<!-- 유의사항 : 미리 등록해두려면 해당 mapper가 진짜 존재하고 있는 상태여야한다. + namespace도 작성되어있어야한다. -->
  	
  </configuration>